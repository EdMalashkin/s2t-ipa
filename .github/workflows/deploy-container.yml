name: Deploy Container

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Docker image tag to deploy"
        required: false
        default: "latest"
        type: string
  workflow_call:
    inputs:
      image_tag:
        description: "Docker image tag to deploy"
        required: false
        default: "latest"
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SERVER_SSH_KEY }}
          known_hosts: unnecessary

      - name: Deploy to Linux Server (Zero Downtime)
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            set -e  # Exit on any error
            
            # Setup
            sudo mkdir -p /var/cache/s2t/ipa
            IMAGE="docker.io/${{ secrets.DOCKERHUB_USERNAME }}/s2t-ipa:${{ inputs.image_tag || 'latest' }}"
            
            echo "üîÑ Pulling latest image..."
            sudo podman pull "$IMAGE"
            
            # Start new container on test port
            NEW_CONTAINER="s2t-ipa-$(date +%s)"
            echo "üöÄ Testing new container: $NEW_CONTAINER"
            
            sudo podman run -d \
              --name "$NEW_CONTAINER" \
              -p 8081:8080 \
              -v /var/cache/s2t/ipa:/app/cache \
              "$IMAGE"
            
            # Wait for health check
            echo "‚è≥ Waiting for container to be ready..."
            for i in {1..15}; do
              if curl -sf http://localhost:8081/health >/dev/null 2>&1; then
                echo "‚úÖ Container is healthy"
                break
              fi
              [ $i -eq 15 ] && { echo "‚ùå Health check failed"; sudo podman logs "$NEW_CONTAINER"; exit 1; }
              sleep 2
            done
            
            # Atomic switch: stop old, start new on production port
            echo "üîÑ Switching to production..."
            
            sudo podman stop s2t-ipa-current 2>/dev/null || true
            sudo podman rm s2t-ipa-current 2>/dev/null || true
            sudo podman stop "$NEW_CONTAINER"
            
            sudo podman run -d \
              --name "s2t-ipa-current" \
              -p 8080:8080 \
              -v /var/cache/s2t/ipa:/app/cache \
              "$IMAGE"
            
            # Final verification
            sleep 3
            if curl -sf http://localhost:8080/health >/dev/null 2>&1; then
              echo "‚úÖ Deployment successful!"
              sudo podman rm "$NEW_CONTAINER" 2>/dev/null || true
              
              # Cleanup old images (keep last 2)
              sudo podman images "$IMAGE" --format "{{.ID}}" | tail -n +3 | xargs -r sudo podman rmi 2>/dev/null || true
            else
              echo "‚ùå Final health check failed"
              exit 1
            fi
          EOF

      - name: Verify deployment
        run: echo "‚úÖ Deployment workflow completed"
